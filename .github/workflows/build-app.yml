name: Build and Release Electron App

on:
  workflow_dispatch:
  push:
    branches:
      - develop
    paths:
      - "app_disabled/**"


jobs:
#  build_on_linux:
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/checkout@v2
#    - uses: actions/setup-node@master
#      with:
#        node-version: 14
#    - name: install dependencies
#      run: npm install
#    - name: build
#      run: npm run make

#  build_on_mac:
#    runs-on: macos-latest
#    steps:
#    - uses: actions/checkout@v2
#    - uses: actions/setup-node@master
#      with:
#        node-version: 14
#    - name: install dependencies
#      run: npm install
#    - name: build
#      run: npm run make

  build_on_win:
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
        - name: Check out Git repository
          uses: actions/checkout@v4
          with:
            ref: ${{ github.ref }}

        - name: Install Node.js
          uses: actions/setup-node@v4
          with:
            node-version: 20

        - name: Create Env
          working-directory: ./app
          run: |
            echo "APP_URL=https://develop.peekaview.de/" >> .env
            echo "API_URL=https://api.peekaview.de/" >> .env
            echo "CONNECT_SRC=https://*.peekaview.de wss://*.peekaview.de" >> .env

        - name: Cache node_modules in app folder
          uses: actions/cache@v3
          with:
            path: ./app/node_modules
            key: ${{ runner.os }}-app-node-modules-${{ hashFiles('app/package-lock.json') }}
            restore-keys: |
               ${{ runner.os }}-app-node-modules-

        - name: Install Dependencies
          working-directory: ./app
          run: npm install

        - name: Set build version
          id: set_version
          working-directory: ./app
          run: |
            $VERSION = (node -p "require('./package.json').version")
            $COMMIT_SHA = (git rev-parse --short HEAD)
            echo "version=$VERSION-$COMMIT_SHA" >> $env:GITHUB_OUTPUT

        - name: Build Electron App
          working-directory: ./app
          env:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            BUILD_VERSION: ${{ steps.set_version.outputs.version }}
          run: npm run electron-build-win

        - name: List dist directory
          working-directory: ./app
          run: |
            Write-Host "Contents of dist directory:"
            Get-ChildItem -Path dist -Recurse
        - name: List out directory
          working-directory: ./app
          run: |
            Write-Host "Contents of out directory:"
            Get-ChildItem -Path out -Recurse

        - name: Create Pre-release
          uses: softprops/action-gh-release@v1
          env:
             GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag_name: pre-release
            name: Pre-release ${{ steps.set_version.outputs.version }}
            body: |
                Pre-release build from develop branch
                Version: ${{ steps.set_version.outputs.version }}
                Built from commit: ${{ github.sha }}
                Build date: $((Get-Date).ToString('yyyy-MM-dd HH:mm:ss'))
            prerelease: true
            draft: true
            files: |
                app/dist/win32-x64/*.exe
            target_commitish: ${{ github.sha }}
