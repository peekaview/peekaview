name: Build and Release Electron App

on:
  workflow_dispatch:
  push:
    branches:
      - develop
    paths:
      - "app/**"

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    permissions:
      contents: write
    steps:
        - name: Check out Git repository
          uses: actions/checkout@v4
          with:
            ref: ${{ github.ref }}

        - name: Install Node.js
          uses: actions/setup-node@v4
          with:
            node-version: 20

        # Nur fÃ¼r Linux: Wine installieren
        - name: Install Wine (Linux only)
          if: runner.os == 'Linux'
          run: |
            sudo dpkg --add-architecture i386
            sudo apt-get update
            sudo apt-get install -y wine64 wine32

        - name: Create Env
          working-directory: ./app
          shell: bash
          run: |
            echo "VITE_APP_URL=https://develop.peekaview.de/" >> .env
            echo "VITE_API_URL=https://api.peekaview.de/" >> .env
            echo "VITE_CONNECT_SRC=https://*.peekaview.de wss://*.peekaview.de" >> .env

        - name: Cache node_modules
          uses: actions/cache@v3
          with:
            path: ./app/node_modules
            key: ${{ runner.os }}-app-node-modules-${{ hashFiles('app/package-lock.json') }}
            restore-keys: |
               ${{ runner.os }}-app-node-modules-

        - name: Install Dependencies
          working-directory: ./app
          run: npm install

        - name: Set build version
          id: set_version
          working-directory: ./app
          shell: bash
          run: |
            VERSION=$(node -p "require('./package.json').version")
            COMMIT_SHA=$(git rev-parse --short HEAD)
            echo "version=$VERSION-$COMMIT_SHA" >> $GITHUB_OUTPUT

        - name: Build Electron App
          working-directory: ./app
          env:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            BUILD_VERSION: ${{ steps.set_version.outputs.version }}
          run: |
            if [ "$RUNNER_OS" == "Windows" ]; then
              npm run electron-build-win
            elif [ "$RUNNER_OS" == "macOS" ]; then
              npm run electron-build-mac
            else
              npm run electron-build-linux
            fi
          shell: bash

        - name: Create Pre-release
          uses: softprops/action-gh-release@v1
          env:
             GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag_name: pre-release
            name: Pre-release ${{ steps.set_version.outputs.version }}
            body: |
                Pre-release build from develop branch
                Version: ${{ steps.set_version.outputs.version }}
                Built from commit: ${{ github.sha }}
                Build date: ${{ github.event.repository.updated_at }}
            prerelease: true
            draft: true
            files: |
                app/dist/**/*.exe
                app/dist/**/*.dmg
                app/dist/**/*.AppImage
                app/dist/**/*.deb
                app/dist/**/*.rpm
            target_commitish: ${{ github.sha }}
